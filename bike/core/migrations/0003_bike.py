# Generated by Django 5.2.6 on 2025-09-11 05:58

import core.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0002_aboutpage_approachimage'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Bike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('scooter', 'Scooter'), ('motorbike', 'Motorbike'), ('ev', 'EV')], default='motorbike', max_length=20)),
                ('brand', models.CharField(max_length=120)),
                ('model', models.CharField(max_length=120)),
                ('variant', models.CharField(blank=True, max_length=120, null=True)),
                ('make_year', models.PositiveIntegerField(help_text='e.g. 2018')),
                ('kilometers', models.PositiveIntegerField(default=0, help_text='Total km driven')),
                ('fuel_type', models.CharField(choices=[('petrol', 'Petrol'), ('diesel', 'Diesel'), ('electric', 'Electric')], default='petrol', max_length=10)),
                ('previous_owner', models.CharField(choices=[('1st', '1st Owner'), ('2nd', '2nd Owner'), ('3rd+', '3rd+ Owner')], default='1st', max_length=10)),
                ('price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('location', models.CharField(help_text='City, State or local area', max_length=200)),
                ('refurbished', models.BooleanField(default=False)),
                ('rto_state', models.CharField(blank=True, max_length=120, null=True)),
                ('rto_city', models.CharField(blank=True, max_length=120, null=True)),
                ('registration_year', models.PositiveIntegerField(blank=True, null=True)),
                ('transmission', models.CharField(blank=True, choices=[('manual', 'Manual'), ('automatic', 'Automatic')], max_length=20, null=True)),
                ('registration_certificate', models.FileField(blank=True, null=True, upload_to=core.models.bike_upload_path)),
                ('finance_available', models.BooleanField(default=False)),
                ('insurance_available', models.BooleanField(default=False)),
                ('warranty', models.BooleanField(default=False, verbose_name='Warranty available')),
                ('bike_color', models.CharField(blank=True, max_length=80, null=True)),
                ('ignition_type', models.CharField(blank=True, choices=[('kick', 'Kick'), ('electric', 'Electric'), ('both', 'Kick & Electric')], max_length=20, null=True)),
                ('front_brake_type', models.CharField(blank=True, choices=[('disc', 'Disc'), ('drum', 'Drum'), ('combined', 'Combined')], max_length=20, null=True)),
                ('rear_brake_type', models.CharField(blank=True, choices=[('disc', 'Disc'), ('drum', 'Drum'), ('combined', 'Combined')], max_length=20, null=True)),
                ('abs_available', models.BooleanField(default=False)),
                ('odometer_type', models.CharField(blank=True, help_text='Digital / Analog', max_length=80, null=True)),
                ('wheel_type', models.CharField(blank=True, choices=[('alloy', 'Alloy'), ('spoke', 'Spoke'), ('steel', 'Steel')], max_length=20, null=True)),
                ('main_image', models.ImageField(blank=True, null=True, upload_to=core.models.bike_upload_path)),
                ('thumb1', models.ImageField(blank=True, null=True, upload_to=core.models.bike_upload_path)),
                ('thumb2', models.ImageField(blank=True, null=True, upload_to=core.models.bike_upload_path)),
                ('thumb3', models.ImageField(blank=True, null=True, upload_to=core.models.bike_upload_path)),
                ('thumb4', models.ImageField(blank=True, null=True, upload_to=core.models.bike_upload_path)),
                ('thumb5', models.ImageField(blank=True, null=True, upload_to=core.models.bike_upload_path)),
                ('thumb6', models.ImageField(blank=True, null=True, upload_to=core.models.bike_upload_path)),
                ('is_booked', models.BooleanField(default=False)),
                ('booked_at', models.DateTimeField(blank=True, null=True)),
                ('is_published', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('booked_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bookings', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bikes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
